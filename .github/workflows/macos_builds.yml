name: â¬œ macOS Builds
on:
  workflow_call:

# Global Settings
env:
  # Only used for the cache key. Increment version to force clean build.
  GODOT_BASE_BRANCH: 3.x
  SCONSFLAGS: warnings=all werror=yes debug_symbols=no lto=full production=yes optimize=size deprecated=no

concurrency:
  group: ci-${{github.actor}}-${{github.head_ref || github.run_number}}-${{github.ref}}-macos
  cancel-in-progress: true

jobs:
  build-macos:
    runs-on: "macos-latest"
    name: ${{ matrix.name }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: Editor (target=release_debug, tools=yes)
            cache-name: editor-macos
            target: release_debug
            tools: true
            bin: "./bin/gdx.osx.opt.tools.64"

          - name: Template (target=release, tools=no)
            cache-name: template-macos
            target: release
            tools: false
            bin: "./bin/gdx.osx.opt.64"

    steps:
      - uses: actions/checkout@v4

      - name: Restore Godot build cache
        uses: ./.github/actions/godot-cache-restore
        with:
          cache-name: ${{ matrix.cache-name }}
        continue-on-error: true

      - name: Setup python and scons
        uses: ./.github/actions/godot-deps

      - name: Compilation (x86_64)
        uses: ./.github/actions/godot-build
        with:
          sconsflags: ${{ env.SCONSFLAGS }} arch=x86_64
          platform: osx
          target: ${{ matrix.target }}
          tools: ${{ matrix.tools }}

      - name: Compilation (arm64)
        uses: ./.github/actions/godot-build
        with:
          sconsflags: ${{ env.SCONSFLAGS }} arch=arm64
          platform: osx
          target: ${{ matrix.target }}
          tools: ${{ matrix.tools }}

      - name: Save Godot build cache
        uses: ./.github/actions/godot-cache-save
        with:
          cache-name: ${{ matrix.cache-name }}
        continue-on-error: true

      - name: Prepare artifact
        run: |
          strip bin/gdx.*
          chmod +x bin/gdx.*

      - name: Create Universal Binary
        run: |
          if [ "${{ matrix.tools }}" = "true" ]; then
            lipo -create bin/gdx.osx.opt.tools.x86_64 bin/gdx.osx.opt.tools.arm64 -output bin/gdx.osx.opt.tools.universal
            rm bin/gdx.osx.opt.tools.x86_64
            rm bin/gdx.osx.opt.tools.arm64
          else
            lipo -create bin/gdx.osx.opt.x86_64 bin/gdx.osx.opt.arm64 -output bin/gdx.osx.opt.universal
            rm bin/gdx.osx.opt.x86_64
            rm bin/gdx.osx.opt.arm64
          fi

      - name: Upload artifact
        uses: ./.github/actions/upload-artifact
        with:
          name: ${{ matrix.cache-name }}
          path: bin/gdx.*
